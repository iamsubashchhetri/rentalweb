  <!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>{{pageTitle}}</title>
  <link rel="stylesheet" href="/css/style.css">
   <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css">
</head>
  <header>
    <nav class="navbar navbar-expand-lg navbar-light bg-light">
      <a class="navbar-brand" href="/">Your Library</a>
      <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
        <span class="navbar-toggler-icon"></span>
      </button>
      <div class="collapse navbar-collapse" id="navbarNav">
        <ul class="navbar-nav">
          <li class="nav-item">
            <a class="nav-link" href="/">Home</a>
          </li>
          {{#if currentUser}}
          <li class="nav-item">
            <a class="nav-link" href="/profile">Profile</a>
          </li>
          <li class="nav-item">
            <a class="nav-link" href="/logout">Logout</a>
          </li>
          {{else}}
          <li class="nav-item">
            <a class="nav-link" href="/login">Login</a>
          </li>
          {{/if}}
        </ul>
      </div>
    </nav>
  </header>
<div class="container">
  <h1>Welcome to Your Library</h1>
  <p>Here are the books available for borrowing:</p>
  <div class="row">
  {{#each books}}
  <div class="card">
    <img src="{{img}}" class="card-img-top" alt="{{title}}">
    <div class="card-body">
      <h5 class="card-title">{{title}}</h5>
      <p class="card-text">{{author}}</p>
      {{#if borrowedBy}}
        <button class="btn btn-secondary" disabled>On Loan</button>
      {{else}}
      <form method="POST" action="/borrow/1">
  <button type="submit" class="btn btn-primary">Borrow</button>
</form>
      {{/if}}
    </div>
  </div>
{{/each}}
  </div>
</div>

<script>
 const borrowButtons = document.querySelectorAll('.btn.btn-primary');
borrowButtons.forEach(button => {
  button.addEventListener('click', (event) => {
    const bookId = event.target.closest('.card').querySelector('.btn.btn-primary').dataset.id;
    fetch(`/borrow/${bookId}`, { method: 'POST' })
      .then(response => response.json())
      .then(data => {
        if (data.success) {
          const borrowButton = event.target;
          borrowButton.textContent = 'On Loan';
          borrowButton.disabled = true;
          const statusElement = event.target.parentNode.querySelector('.status');
          statusElement.textContent = 'On Loan';
          statusElement.classList.add('text-danger'); // optional: add red color to status text
        } else {
          alert('There was an error borrowing this book. Please try again later.');
        }
      })
      .catch(error => {
        console.error('Error borrowing book:', error);
        alert('There was an error borrowing this book. Please try again later.');
      });
  });
});
</script>
</body>
</html>